std::vector<glm::vec3> lightColors{
      {1.f, .1f, .1f},
      
      {.1f, 1.f, .1f},

      {1.f, 1.f, .1f},
      {.1f, 1.f, 1.f},
                  {.1f, .1f, 1.f},

      {1.f, 1.f, 1.f}  
    };

    for (int i = 0; i < lightColors.size(); i++) {
        auto pointLight = GameObject::makePointLight(0.5f, 0.05f, lightColors[i]);
        auto rotateLight = glm::rotate(glm::mat4(1.f), (i * glm::two_pi<float>()) / lightColors.size(), {0.f, -1.0f, 0.f});
        pointLight.transform.translation = glm::vec3(rotateLight * glm::vec4(-1.f, -1.f, -1.f, 1.f));
        gameObjects.emplace(pointLight.getId(), std::move(pointLight));
    }